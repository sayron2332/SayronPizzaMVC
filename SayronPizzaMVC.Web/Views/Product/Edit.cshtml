@using SayronPizzaMVC.Core.DTO_s.Products;
@model ProductDto

@{
    ViewData["Title"] = "Edit product";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    <!-- summernote -->
    <link rel="stylesheet" href="~/dashboard/plugins/summernote/summernote-bs4.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" />
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Edit product</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-controller="Dashboard" asp-action="Index">Home</a></li>
                        <li class="breadcrumb-item active">Edit product</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-7 offset-2">
                    <!-- general form elements -->
                    <div class="card card-warning">
                        <div class="card-header">
                            <h3 class="card-title">Update product</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        @if (@ViewBag.CreateProductError != null)
                        {
                            <span class="text-danger mt-3">@ViewBag.CreateProductError</span>
                        }
                        <form method="post" asp-controller="Product" asp-action="Edit" enctype="multipart/form-data">
                            
                            <div class="card-body">
                                <div class="form-group">
                                    <label>Title</label>
                                    <input type="text" asp-for="@Model.Name" class="form-control" placeholder="Name">
                                </div>
                                <div class="form-group">
                                    <label>Description</label>
                                    <div class="card-body">
                                        <input type="text" asp-for="@Model.Description" class="form-control" placeholder="Description">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Size</label>
                                    <div class="card-body">
                                        <input type="text" asp-for="@Model.Size" class="form-control" placeholder="Size">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Price</label>
                                    <div class="card-body">
                                        <input type="text" asp-for="@Model.Price" class="form-control" placeholder="Price">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Category">Category</label>
                                    <select asp-for="AppCategoryId" class="custom-select form-control-border" asp-items="ViewBag.CategoryList"></select>
                                </div>
                                <div class="form-group">
                                    <label>Image</label>

                                    <div class=" input-group">
                                        <div class="custom-file">
                                            <div class="custom-file">
                                                <input type="file" id="Image" name="files" asp-for="@Model.File" class="custom-file-input" />
                                                <label class="custom-file-label">Choose file...</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Cropped Image</label>
                                    <div id="croppedImage"></div>
                                </div>
                                <div class="form-group">
                                    <button type="button" id="cropButton" class="btn btn-primary">Crop Image</button>
                                </div>
                                <div class="form-group">
                                    @if (@Model.ImagePath == "Default.png")
                                    {
                                        <img src="~/images/main/content-images/1.jpg" alt="Photo">
                                    }
                                    else
                                    {
                                        <img src="~/images/products/@Model.ImagePath" alt="Photo">
                                    }
                                </div>
                            </div>
                            <!-- /.card-body -->

                            <div class="card-footer">
                                <button type="submit" class="btn btn-warning">Update</button>
                            </div>
                        </form>
                    </div>
                    <!-- /.card -->
                </div>
                <!--/.col (left) -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

@section Scripts{
    <!-- Summernote -->
    <script src="~/dashboard/plugins/summernote/summernote-bs4.min.js"></script>
    <script>
        $(function () {
            // Summernote
            $('#summernote').summernote({
                minHeight: 200
            })
        })

        $(function () {
            // Summernote
            $('#text').summernote({
                minHeight: 400
            })
        })

        // Add the following code if you want the name of the file appear on select
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>
    <script>
        $(function () {
            var $imageInput = $('#Image');
            var $croppedImage = $('#croppedImage');
            var $cropper;



            // Зберігаємо обрізане зображення на клієнті
            var croppedImageData = null;

            // Ініціалізуємо Croppie при виборі файлу
            $imageInput.on('change', function () {
                var files = this.files;
                var file;

                if (files && files.length) {
                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        if ($cropper) {
                            $cropper.destroy();
                        }

                        $croppedImage.empty();

                        $cropper = new Croppie($croppedImage[0], {
                            viewport: { width: 200, height: 200 },
                            boundary: { width: 300, height: 300 },
                            aspectRatio: 1,
                            viewMode: 2,
                            responsive: true,
                            crop: function (event) {
                                // Під час обрізки зберігаємо обрізане зображення на клієнті
                                $cropper.result('base64').then(function (base64) {
                                    croppedImageData = base64;
                                });
                            }
                        });

                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $cropper.bind({
                                url: e.target.result
                            });
                        };

                        reader.readAsDataURL(file);
                    } else {
                        alert('Будь ласка, виберіть зображення.');
                    }

                }
            });

            $('#cropButton').on('click', function () {
                if ($cropper) {
                    // Очікуємо завершення операції і виводимо дані тільки після цього
                    $cropper.result('base64').then(function (base64) {
                        croppedImageData = base64;

                        // Створюємо новий об'єкт DataTransfer
                        let dataTransfer = new DataTransfer();

                        // Створюємо новий Blob з даними з Croppie (виправте тип та розширення, якщо потрібно)
                        let blob = dataURItoBlob(croppedImageData);

                        console.log(blob);

                        // Створюємо новий файл і додаємо його до DataTransfer
                        let file = new File([blob], "filename.png", { type: 'image/png' }); // Встановіть правильний тип і розширення файлу
                        dataTransfer.items.add(file);

                        // Оновлюємо FileList в інпуті
                        var inputElement = document.getElementById('Image'); // Замініть 'Image' на id вашого інпуту
                        inputElement.files = dataTransfer.files;
                        previewImage.src = "image/png";
                    });
                }
            });

            function dataURItoBlob(dataURI) {
                var byteString = atob(dataURI.split(',')[1]);
                var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
                var ab = new ArrayBuffer(byteString.length);
                var ia = new Uint8Array(ab);
                for (var i = 0; i < byteString.length; i++) {
                    ia[i] = byteString.charCodeAt(i);
                }
                return new Blob([ab], { type: mimeString });
            }
        });
    </script>
}